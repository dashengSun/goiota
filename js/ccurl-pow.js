var net = require('net');
require('buffer').Buffer

var ccurlPow = function(newTrytes, minWeightMagnitude, callback) {
  var client = new net.Socket();

  var trytesAfterPOW = '';

  client.connect(33333, 'wudanyu.xicp.net', function() {
    console.log('connected');

    var bufSend = Buffer.allocUnsafe(16);

    bufSend.writeUInt32LE(999999, 0);
    bufSend.writeUInt32LE(123456, 4);
    bufSend.writeUInt32LE(2673, 8);
    bufSend.writeUInt32LE(1, 12);

    client.write(bufSend);

    // var tx = "UUKCVKWKRKYMQ9NEEJKCQXBHMGJDZLNKECZYWPEKBXLKXNVBLPKNLFQGVQUHLMUACYFGAOYIZCQRAKBNSLXLASMJQQT9UPSM9BRTKJHLALUFIIYZWIJ9PQ9JNCSTSXJK9NVRQTZXKQDWFUMNVVNXBJVMZPNAKZCROWTBDIVDEWVPHPBSKCFWMPWQHSTTAYHJRZJWVJBXQYUFGJKIOAEVKJ9POTIDBZADHYKLKLHPHUOOLJIHLGNGFSGCOEBXPWVTOPJLGHTXVUFOXDIIFMEVUKHHOVSYWITYDTCZQKCJHCTASAAUPIOJW9NCGIAWRYTDJHYYGBMPIJUFELYDYMDBOEYSWNNDBYGFNERZ9MAGPHRCQFKZISZXGCNYBRORMSRHKGVSHPUSWZHXXHPGIW9OBLSQQKYDVNFEGHAN9APEZ9XRLJFJ9UA9WICKKDFFAJJZBCZWUOFVTHSOJDMULYXKLCSNVUCIRPN9SKMWWDDIXCRSJJLGJKISGYWBGELBZMUSFPJDQTKZUEYCNCJMGBJGPAALZJEYGXNJTOFRNADC9W9QXRKXLGWJGWGLMLTDLWOSQ9GSHIEXPBOKAILOGLCYLAENZHBNRRBGMSNQBRKLMICXAZDFC9GIX9PHVFJSYVNABXJGHEHGAXMMSCAYHMCDT9MAQTBYZTYPGVRGVGXAAYETUPEYGXGFBTBJSXDMMKVZOVDJNWFJBHMEKKDTBDGNSOHYAXOUYUFTGNJPJJZGKV9GZINMHYSTNYSASPUSPNIFNBGXIOYGMGMUCMIQSVYNMFBGFCJQIDNNLRWIYTXWODAK9JOEDLDOMEPXBEPJDKQRXCJLHWGMYK9EUTAGSJRUGDGLQIMKIGWIUCCSSOSVQGRTBKHKAXHFTFAFIBXTIUCFAYVGZPROY9X9MEHUEGWIIFUIKMTVWYSQG9AXIQSUNIXOKMF9KQTRUDRLJFBMDHVCLVWHDNVVYYZAVOXL9USIAUKLGRCITSKLMDGWZDFPOORGOSBQYSJUJQPQXCBHAGVAINJPJJNPWUQ9MRUALINKQPAREOMYUTFNEFNMJFWXVXPDQR9MXYAMMYBAJPAVAQBVSIJVVHRKE9TOXCFZWGC9L9DSTVAUI9DPBBPZZLIZGKYRQYKIUJBRDLONQSGJSSEOAOORBWCHULSFZTPNTDRIRE9XCKIUUFTQCHCTXVBPEJM9CRSCHGBIADZTHSYHOXHQGCHWINTXJWGYJKYVRYKRLGCZOSHDKVQIPSVSPYXGSVZM9BYYUWICCOSHGEZKMZMY9KJBYITXAIJLBTZKO9WISF9WKLTGFGVKADHQJMRJWHTHIMEBGFJVGZWCGZ9GAM9FEAKKRD9FCO9VGPNTVKG9GDRL9GVTBVRYVBSPHVVZEBBABVGJOAMQWLEFU9FVZICMDVICZMDQMSWFUWEBEUTFNTBKVSYMXTHCNV9QVCRKRGPJWFSRWJBUOIISBZS9VBJLZSQJLFGOVJAOKDAZXAABQIJSUHCNNGBTPWFKDMYRGITXQGYUMS9BMBAOVRJFPCBZQZKOMFYKBOXLWXRUNFPMANE9ASCZOPIFZWOBOMJBMTANCGZHEYBLHEATJRPYWITUWYDEY9YEOVEYKDFH9CUZLDFJBQXUCORITIBCADIEBRUMMCVGSXJQBCCUAPJGZTRGUUAQBBYYUUEWVMYPDIWWP9QO9H99UWXE9ZM9IIDWQHOWNGKYXBUJRKOMMEOHWRGLWNDFMHLZGSGHUNVLRUHL9BTYHSMRYO9ICOETPDFKCRPFFKTCQIYJLXLHPJJEUZOCTOVAKFTPPZZPADTYZFUIOPNNAZOQRJZCGANHSXRSI9ZEEKKSKNNSHBGQS9ORU9IYXFTRMNXRFAFYRZYZAALADFTXTGGSWUXSSYMZIBEAFQBYKPRTULKCMS9XVGVYUHQSHADONFAWGCPQUJGD9KAJXXFQZVJDBTYLBNDFTGDMRZBAVXUYIWNTBRMCGKCMXLRMKIRKHBWTSC9EGXXWHBV9BVQBBSSYZXBPABURRLR9TBLJZWQZPWAEJMNOUPQPMQTNYERVAATLMUVTMRDJJXTZCQHFIOSDEUSNDDZUUJOFRDDKEOKAMHQUPRHHDG9UZETMVAVEKUYRPDIYGBSCNQLJJKETI9DOTXZNPZMMYRHFPJASHLZJFAMPNAOB9JNGXV9UHPSNIREHBZJKPWCHICGJZXKE9GSUDXZYUAPLHAKAHYHDXNPHENTERYMMBQOPSQIDENXKLKCEYCPVTZQLEEJVYJZV9BWU999999999999999999999999999JIGH999999999999999999999999WFYTXD99999999999A99999999QLYTJYCRECGXCUHKSSKT9MDYUTRJUSWCNUEEJM9P9RXVU9WRVZKMSUPFNBORH9GYLY9TRRCO9ADVHPKTAFGOYISSUJBIZH9DPEGMHGLFQDVHYFUTPUNN9QPKUEOCGLWAFCQIHYHVOCUGJNKKRBFTFDSJDSIKH99999AYCVBYZJJRCUNCOLXMSIWVTCYZOUHGMHVYULMYXNCMLMTB9QQDCLJXHMBKUHRIMB9QQFQQSSCEYW99999JPQXAEBVIDDAAAWEJ9JGJGSPOGFQGPIPQLJBPKWF9XUHOVZGQRDSVAQDNZC9QZBDBMYDATGYHNJFOHXJC";
    // var tx
    client.write(newTrytes);
  });

  client.on('data', function (buf) {
    if (buf.length == 16) {
      console.log("receive head")
    } else if (buf.length == 2673) {
      trytesAfterPOW = buf.toString();
      console.log(trytesAfterPOW);
      client.destroy();

      callback(null, trytesAfterPOW)

    } else if (buf.length < 2673 && buf.length > 16 && trytesAfterPOW.length < 2673) {

      trytesAfterPOW += buf.toString();
      if (trytesAfterPOW.length >= 2673) {
        console.log(trytesAfterPOW);
        client.destroy();

        callback(null, trytesAfterPOW);
      }
    } else {
      console.log("error")
      console.log(buf)
      console.log(trytesAfterPOW)
      client.destroy()

      callback("error")
    }

    // console.log(buf.readInt32LE(0, 4));
    // console.log(buf.readInt32LE(4, 8));
    // console.log(buf.readInt32LE(8, 12));
    // console.log(buf.readInt32LE(12, 16));

  });

  client.on('close', function() {
    console.log('connection closed.');
  });
}

module.exports = {
  'ccurlPow': ccurlPow
}